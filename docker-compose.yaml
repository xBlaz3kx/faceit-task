services:

  # MongoDB instance
  mongo:
    image: mongo:7
    container_name: mongodb
    hostname: mongodb
    restart: on-failure
    command: "--config /etc/mongo/mongo.conf"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
      - MONGO_INITDB_DATABASE=faceit
      - MONGO_REPLICA_SET_NAME=rs0
    volumes:
      - mongo:/data/db
      - ./mongo.conf:/etc/mongo/mongo.conf
      - ./keyfile:/opt/keyfile
    networks:
      - default
    ports:
      - "27017:27017"
    healthcheck:
      test: |
        test $$(mongosh --quiet -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --eval "try { rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: 'mongodb' }] }).ok } catch (_) { rs.status().ok }") -eq 1
      interval: 10s
      retries: 3
      start_period: 15s

  # User service (healthcheck is built in the image)
  user-service:
    hostname: user-service
    image: user-service
    build:
      context: .
      dockerfile: ./build/Dockerfile
      target: app
    restart: on-failure
    environment:
      # MongoDB connection string
      - USER_DATABASE_URI=mongodb://mongo:mongo@mongodb:27017/faceit?authSource=admin
      # GRPC Server address
      - USER_SERVER=0.0.0.0:8080
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - default
    ports:
      - "8080:8080"

networks:
  default:
    driver: bridge

volumes:
  mongo:
    driver: local
